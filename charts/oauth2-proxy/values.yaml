# Global image settings
image:
  repository: quay.io/oauth2-proxy/oauth2-proxy
  tag: v7.2.1 # Asegúrate que esta es la versión que quieres
  pullPolicy: IfNotPresent

# Default replica count (can be overridden per instance)
replicaCount: 1

# Default credentials that can be used if not specified per instance.
# ¡IMPORTANTE! Estos son placeholders y DEBEN ser cambiados.
defaultCredentials:
  # Estos valores se usarán para crear un Secret de Kubernetes si no se especifica `existingSecretName`
  # Los valores aquí NO deben estar codificados en Base64. El template se encargará de eso.
  clientId: "DEFAULT_GITHUB_CLIENT_ID_CHANGE_ME"
  clientSecret: "DEFAULT_GITHUB_CLIENT_SECRET_CHANGE_ME"
  # cookieSecret DEBE ser único por instancia para seguridad. No hay default global para cookieSecret.
  # existingSecretName: "" # Descomenta y establece si quieres usar un Secret de K8s preexistente globalmente para clientId/clientSecret

# Default arguments for oauth2-proxy. Estos pueden ser sobreescritos o extendidos por instancia.
defaultArgs:
  provider: "github"
  emailDomains: # Lista de dominios de email permitidos
    - "*"
  cookieSecure: "true"
  cookieHttpOnly: "true"
  cookieExpire: "168h"
  cookieRefresh: "1h"
  # cookieDomain: ".adrianmagarola.click" # Opcional: para compartir cookies entre subdominios
  setXAuthRequest: "true" # Para integración con nginx ingress auth_request
  passAccessToken: "false"
  passAuthorizationHeader: "false"
  # sslInsecureSkipVerify: "false" # Poner a true solo para desarrollo con certs autofirmados en upstreams
  # whitelistDomains: # Opcional: restringe a qué dominios se puede redirigir tras la autenticación
  #   - ".adrianmagarola.click"

# Lista de instancias de oauth2-proxy a desplegar
oauth2proxyInstances:
  - name: "argocd" # Nombre único para esta instancia (usado en nombres de recursos)
    namespace: "argocd" # Namespace donde se desplegará esta instancia de oauth2-proxy
    # replicaCount: 1 # Sobreescribe el global si se establece

    # Credenciales para esta instancia.
    credentials:
      # clientId: "OVERRIDE_CLIENT_ID_FOR_ARGOCD" # Opcional, si es diferente del default
      # clientSecret: "OVERRIDE_CLIENT_SECRET_FOR_ARGOCD" # Opcional
      cookieSecret: "GENERATE_A_UNIQUE_32_BYTE_STRING_FOR_ARGOCD_COOKIE_SECRET" # ¡OBLIGATORIO Y ÚNICO POR INSTANCIA! (No codificado en Base64 aquí)
      # existingSecretName: "argocd-oauth-credentials" # Opcional: si las credenciales (clientId, clientSecret, cookieSecret) están en un Secret de K8s existente

    # Configuración del upstream (la aplicación protegida)
    upstream: "http://argocd-server.argocd.svc.cluster.local:80"
    redirectURL: "https://auth-argocd.adrianmagarola.click/oauth2/callback" # URL de callback de OAuth para esta instancia

    # Configuración de Ingress para exponer este servicio oauth2-proxy
    ingress:
      enabled: true
      host: "auth-argocd.adrianmagarola.click" # Host para el servicio oauth2-proxy en sí
      # className: "nginx" # Opcional: especifica la clase de Ingress
      annotations: # Opcional: anotaciones específicas para este Ingress
        cert-manager.io/cluster-issuer: "letsencrypt" # Ejemplo
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      tls:
        enabled: true
        secretName: "oauth2-proxy-argocd-tls" # Secret de K8s para el certificado TLS de auth-argocd...

    # Argumentos adicionales o para sobreescribir los defaults para esta instancia
    # args:
    #   emailDomains:
    #     - "specific-domain.com"

  - name: "grafana"
    namespace: "monitoring" # Asumiendo que grafana está en el namespace 'monitoring'
    credentials:
      cookieSecret: "GENERATE_A_UNIQUE_32_BYTE_STRING_FOR_GRAFANA_COOKIE_SECRET" # ¡OBLIGATORIO Y ÚNICO!
    upstream: "http://grafana.monitoring.svc.cluster.local:3000" # Ajusta al nombre de tu servicio de Grafana
    redirectURL: "https://auth-grafana.adrianmagarola.click/oauth2/callback"
    ingress:
      enabled: true
      host: "auth-grafana.adrianmagarola.click"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      tls:
        enabled: true
        secretName: "oauth2-proxy-grafana-tls"

# Configuración de recursos para los pods (opcional, puede ser sobreescrito por instancia)
# resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 80m
  #   memory: 64Mi

# Node selector global (opcional, puede ser sobreescrito por instancia)
# nodeSelector:
#   node-role.k3s.io/master: "true" # Ejemplo del chart original, considera si es necesario

# serviceAccount:
  # create: true
  # name: ""
  # annotations: {}