prometheus:
  prometheusSpec:
    scrapeInterval: "30s"
    evaluationInterval: "30s"
prometheusInstance:
  # Name for the Prometheus custom resource, defaults to chart fullname
  # name: "" 

  replicaCount: 1
  
  # Image for the Prometheus instance (e.g., "quay.io/prometheus/prometheus:v2.51.2")
  # The Prometheus Operator might also use a 'version' field which maps to a specific image.
  # For direct control, specify the full image path and tag.
  image: "prom/prometheus:v2.51.2"

  # serviceAccountName will be derived using helpers, see serviceAccount section below

  # Selectors for discovering ServiceMonitors, PodMonitors, and PrometheusRules
  # These allow Prometheus to find its scrape targets and rules.
  # Example:
  # serviceMonitorSelector:
  #   matchLabels:
  #     team: frontend
  serviceMonitorSelector: {}
  podMonitorSelector: {}
  ruleSelector: {}
  
  # Resources for the Prometheus pods
  resources: {}
  #  limits:
  #    cpu: 200m
  #    memory: 256Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

  # Node selector for Prometheus pods
  nodeSelector:
    node-role.k3s.io/worker: "true"

  # Storage configuration (e.g., persistent volume claims)
  # storage:
  #   volumeClaimTemplate:
  #     spec:
  #       storageClassName: standard
  #       resources:
  #         requests:
  #           storage: 10Gi

  # Alertmanager configuration
  # alertmanagersConfig:
  #   namespace: monitoring
  #   name: alertmanager-main
  #   port: web

# ServiceAccount for the Prometheus instance
serviceAccount:
  create: true # Ensures your chart doesn't try to create a new ServiceAccount
  # Name of the service account. If not set and create is true, a name is generated using fullname template
  # If create is false, this name should point to an existing ServiceAccount.
  # The Prometheus Operator (kube-prometheus-stack) usually creates a ServiceAccount like <stack-release-name>-prometheus (e.g., prometheus-operator-prometheus).
  # If this is empty and create is false, the Prometheus CR will try to use the 'default' ServiceAccount in the namespace.
  name: "" 
  annotations: {}

# RBAC for the Prometheus instance (ClusterRole and ClusterRoleBinding)
rbac:
  create: true # Ensures your chart doesn't try to create ClusterRole/ClusterRoleBinding

# Default service monitor scrape interval for Prometheus
# serviceMonitorScrapeInterval: 30s

# Ingress configuration is usually handled separately or for Alertmanager/Grafana
# ingress:
#   enabled: false

operator:
  name: prometheus-operator
  service:
    type: ClusterIP
    ports:
      - name: http
        port: 8080
        targetPort: http
  replicas: 1
  image: quay.io/prometheus-operator/prometheus-operator:v0.74.0
  imagePullPolicy: IfNotPresent
  args:
    - --kubelet-service=kube-system/kubelet
  port: 8080
  resources:
    requests:
      memory: "200Mi"
      cpu: "100m"
    limits:
      memory: "400Mi"
      cpu: "200m"